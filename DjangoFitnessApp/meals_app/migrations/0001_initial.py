# Generated by Django 5.1.7 on 2025-04-01 11:20

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0002_profile_profile_picture'),
    ]

    operations = [
        migrations.CreateModel(
            name='Meal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('brand', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('category', models.CharField(choices=[('my_meals', 'My Meals'), ('Pork', 'Pork'), ('Beef', 'Beef'), ('Poultry', 'Poultry'), ('Seafood', 'Seafood'), ('Fast_Food', 'Fast Food'), ('Dairy', 'Dairy'), ('cereal', 'Cereal, Grains & Pasta'), ('Fruits', 'Fruits'), ('Vegetables', 'Vegetables'), ('Sweets', 'Sweets & Snacks'), ('Drinks', 'Drinks'), ('Other', 'Other')], default='my_meals', max_length=100)),
                ('calories_per_portion', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
                ('grams_portion', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
                ('protein_per_portion', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
                ('carbs_per_portion', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
                ('sugars_per_portion', models.FloatField(blank=True, null=True)),
                ('fats_per_portion', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
                ('saturated_fats_per_portion', models.FloatField(blank=True, null=True)),
                ('fiber_per_portion', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('sodium_per_portion', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('calories_per_gram', models.FloatField(blank=True, null=True)),
                ('protein_per_gram', models.FloatField(blank=True, null=True)),
                ('carbs_per_gram', models.FloatField(blank=True, null=True)),
                ('sugars_per_gram', models.FloatField(blank=True, null=True)),
                ('fats_per_gram', models.FloatField(blank=True, null=True)),
                ('saturated_fats_per_gram', models.FloatField(blank=True, null=True)),
                ('fiber_per_gram', models.FloatField(blank=True, null=True)),
                ('sodium_per_gram', models.FloatField(blank=True, null=True)),
                ('meal_picture', models.ImageField(blank=True, null=True, upload_to='meal_pictures/')),
            ],
        ),
        migrations.CreateModel(
            name='DailyMeal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('meal_type', models.CharField(choices=[('breakfast', 'Breakfast'), ('lunch', 'Lunch'), ('dinner', 'Dinner'), ('snack', 'Snack')], max_length=10)),
                ('grams', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
                ('calories', models.FloatField()),
                ('protein', models.FloatField()),
                ('carbs', models.FloatField()),
                ('sugars', models.FloatField(blank=True, null=True)),
                ('fats', models.FloatField()),
                ('saturated_fats', models.FloatField(blank=True, null=True)),
                ('fiber', models.FloatField(blank=True, null=True)),
                ('sodium', models.FloatField(blank=True, null=True)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='daily_meals', to='accounts.profile')),
                ('meal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='daily_meals', to='meals_app.meal')),
            ],
        ),
    ]
